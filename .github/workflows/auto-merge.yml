name: Auto-merge PR

on:
  pull_request:
    types: [labeled, unlabeled]

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event.pull_request.head.repo.full_name == github.repository
    concurrency:
      group: auto-merge-pr-${{ github.event.pull_request.number }}
      cancel-in-progress: false

    permissions:
      contents: write
      pull-requests: write

    env:
      PR_NUMBER: ${{ github.event.pull_request.number }}
      MERGE_METHOD: merge
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Log workflow context
        run: |
          echo "::notice::Workflow triggered by: ${{ github.event_name }}"
          echo "::notice::Action: ${{ github.event.action }}"
          echo "::notice::PR Number: ${PR_NUMBER}"
          echo "::notice::Label: ${{ github.event.label.name }}"
          echo "::notice::Merge Method: ${MERGE_METHOD}"

      - name: Validate PR exists
        run: |
          if ! gh pr view "${PR_NUMBER}" --repo "${{ github.repository }}" &>/dev/null; then
            echo "::error::PR #${PR_NUMBER} does not exist or is not accessible"
            exit 1
          fi
          echo "::notice::Validated PR #${PR_NUMBER} exists"

      - name: Disable auto-merge on label removal
        if: github.event.action == 'unlabeled' && github.event.label.name == 'auto-merge'
        run: |
          if ! gh pr merge --disable-auto "${PR_NUMBER}" --repo "${{ github.repository }}"; then
            echo "::error::Failed to disable auto-merge for PR #${PR_NUMBER}"
            exit 1
          fi
          echo "::notice::Successfully disabled auto-merge for PR #${PR_NUMBER}"

      - name: Validate PR state
        if: github.event.action == 'labeled' && github.event.label.name == 'auto-merge'
        run: |
          pr_state=$(gh pr view "${PR_NUMBER}" --repo "${{ github.repository }}" --json state,mergeable,reviewDecision --jq '.')

          if [[ $(echo "$pr_state" | jq -r '.state') != "OPEN" ]]; then
            echo "::error::PR #${PR_NUMBER} is not open"
            exit 1
          fi

          if [[ $(echo "$pr_state" | jq -r '.mergeable') == "CONFLICTING" ]]; then
            echo "::error::PR #${PR_NUMBER} has merge conflicts"
            exit 1
          fi

          echo "::notice::PR is in valid state for auto-merge"

      - name: Enable auto-merge on label addition
        if: github.event.action == 'labeled' && github.event.label.name == 'auto-merge'
        run: |
          if ! gh pr merge "${PR_NUMBER}" \
            --repo "${{ github.repository }}" \
            --"${MERGE_METHOD}" \
            --auto \
            --delete-branch; then
            echo "::error::Failed to enable auto-merge for PR #${PR_NUMBER}"
            echo "::error::This may indicate missing permissions, invalid PR state, or branch protection conflicts"
            exit 1
          fi
          echo "::notice::Successfully enabled auto-merge for PR #${PR_NUMBER} using ${MERGE_METHOD} method"
